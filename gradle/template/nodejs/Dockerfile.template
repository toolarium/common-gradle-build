#########################################################################
#
# Dockerfile
#
# Copyright by @@LICENSE_ORGANISATION@@, all rights reserved.
# @@LICENSE@@
#
#########################################################################

FROM @@dockerImage@@

# define build settings
ARG UID=@@dockerUID@@
ARG GID=@@dockerGID@@
ARG EXPOSE_PORT="@@dockerExposePort@@"
ARG RUNTIMEUSER="@@dockerUser@@"
ARG RUNTIMEGROUP="@@dockerGroup@@"
ARG TIMEZONE="@@dockerTimezone@@"
ARG DEPLOYMENT_SOURCE_PATH="@@dockerDeploymentSourcePath@@"
ARG DEPLOYMENT_SUBPATH="@@dockerSubPathAccess@@"
ARG DEPLOYMENT_PATH=/deployment/
ARG DEFAULT_ENCODING="@@dockerDefaultEncoding@@"
ARG DEFAULT_LOCALE="@@dockerDefaultLocale@@"
ARG DEFAULT_LANGUAGE="@@dockerDefaultLanguage@@"
ARG ENABLE_ACCESS_LOG=@@dockerEnableAccessLog@@

# set meta data
LABEL vendor="@@LICENSE_ORGANISATION@@" \
    group-id="@@GROUP_ID@@" \
    component-id="@@COMPONENT_ID@@" \
    description="@@DESCRIPTION@@" \
    url="@@URL@@" \
    license="@@LICENSE@@" \
    version="@@VERSION@@" \
    is-release-version="@@IS_RELEASE_VERSION@@" \
    build-timestamp="@@BUILD_TIMESTAMP_SHORT@@"

# set user and group
RUN addgroup -g ${UID} ${RUNTIMEGROUP} \
    && adduser -D ${RUNTIMEUSER} -G ${RUNTIMEGROUP} -u ${GID}

# set timezone
RUN apk --no-cache add --update \
    && apk --no-cache add tzdata \
    && cp "/usr/share/zoneinfo/${TIMEZONE}" /etc/localtime \
    && echo "${TIMEZONE}" > /etc/timezone

# disable access log
RUN if [ "${ENABLE_ACCESS_LOG}" = "false" ] ; then rm /var/log/nginx/access.log && ln -s /dev/null /var/log/nginx/access.log; fi

# create path and set permissions for user
RUN mkdir -p ${DEPLOYMENT_PATH}${DEPLOYMENT_SUBPATH} \
  && chown -R ${RUNTIMEUSER}:${RUNTIMEGROUP} ${DEPLOYMENT_PATH}${DEPLOYMENT_SUBPATH} \
  && chmod -R 755 ${DEPLOYMENT_PATH}${DEPLOYMENT_SUBPATH} \
  && chown -R ${RUNTIMEUSER}:${RUNTIMEGROUP} /var/cache/nginx \
  && chown -R ${RUNTIMEUSER}:${RUNTIMEGROUP} /var/log/nginx \
  && touch /var/run/nginx.pid \
  && chown -R ${RUNTIMEUSER}:${RUNTIMEGROUP} /var/run/nginx.pid

# define port and root directory in the default.conf
RUN cp /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.org \
  && echo -e "server {\n \
  listen $EXPOSE_PORT;\n \
  root $DEPLOYMENT_PATH;\n \
  index index.html index.html;\n \
  location / {\n \
     try_files \$uri ${DEPLOYMENT_SUBPATH}index.html /${DEPLOYMENT_SUBPATH}index.html =404;\n \
  }\n \
}" > /etc/nginx/conf.d/default.conf

# comment user directive because we run as non root user
RUN cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.org \
  && cat /etc/nginx/nginx.conf.org | sed 's/^user /#user /' > /etc/nginx/nginx.conf

# copy the application
COPY --chown=${RUNTIMEUSER}:${RUNTIMEGROUP} ${DEPLOYMENT_SOURCE_PATH} ${DEPLOYMENT_PATH}${DEPLOYMENT_SUBPATH}

# set language
ENV LANG='${DEFAULT_LOCALE}.${DEFAULT_ENCODING}' LANGUAGE='${DEFAULT_LOCALE}:${DEFAULT_LANGUAGE}'

# switch RUNTIMEUSER
USER ${RUNTIMEUSER}
