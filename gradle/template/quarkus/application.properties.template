#
#  @@fileName@@
#  
#  Copyright by @@LICENSE_ORGANISATION@@, all rights reserved.
#  @@LICENSE@@
#

# general logging 
quarkus.http.root-path = /
quarkus.banner.enabled = false
quarkus.log.level = WARN
#quarkus.hibernate-orm.log.sql = true
quarkus.log.category."@@PARENT_PACKAGE@@".level = INFO
quarkus.log.console.format =%d{yyyy-MM-dd HH:mm:ss,SSS} - %.1p - [%H|%i|%t{id}] - %-80c{79} - %-15.15X{logInformation} | %m%n
#quarkus.log.console.format =%d{yyyy-MM-dd HH:mm:ss,SSS} - %.1p - [%-20H{20}|%-6i{6}|%-6t{id}] - %-80c{79} - %-15.15X{logInformation} | %m%n

# security configuration
#%prod.quarkus.oidc.client-id = ${@@KUBERNETES_APPLICATION_OIDC_CLIENT_ID_ENV_NAME@@}
#%prod.quarkus.oidc.public-key = ${@@KUBERNETES_APPLICATION_OIDC_PUBLICKEY_ID_ENV_NAME@@}
#%prod.quarkus.oidc.auth-server-url = ${@@KUBERNETES_APPLICATION_OIDC_AUTH_SERVER_URL_NAME@@}

# production configuration: never allow database generation on production!
%prod.quarkus.hibernate-orm.database.generation = none
%prod.quarkus.hibernate-orm.sql-load-script = no-file
%prod.quarkus.datasource.db-kind = @@kubernetesDatabaseType@@
%prod.quarkus.datasource.username = ${@@KUBERNETES_DATABASE_USERNAME_ENV_NAME@@}
%prod.quarkus.datasource.password = ${@@KUBERNETES_DATABASE_PASSWORD_ENV_NAME@@}
%prod.quarkus.datasource.jdbc.url = ${@@KUBERNETES_DATABASE_JDBC_URL_ENV_NAME@@}
%prod.quarkus.datasource.jdbc.max-size = ${@@KUBERNETES_DATABASE_JDBC_MAXSIZE_ENV_NAME@@:@@KUBERNETES_DATABASE_MAXSIZE_VALUE@@}

# test configuration: drop and create the database in memory database, log debug -> cb test
%test.quarkus.log.category."@@PACKAGE@@".level = DEBUG
%test.quarkus.log.file.enable = true
%test.quarkus.log.file.format =%d{yyyy-MM-dd HH:mm:ss,SSS} - %.1p - [%H|%i|%t{id}] - %-80c{79} - %-15.15X{logInformation} | %m%n
%test.quarkus.log.file.path = build/@@PROJECT_NAME@@.log
%test.quarkus.hibernate-orm.database.generation = drop-and-create
%test.quarkus.liquibase.migrate-at-start = false
%test.quarkus.hibernate-orm.sql-load-script = import-dev.sql
%test.quarkus.datasource.db-kind = h2
%test.quarkus.datasource.username = username-default
%test.quarkus.datasource.password =
%test.quarkus.datasource.jdbc.url = jdbc:h2:mem:@@PROJECT_NAME@@

# dev configration: update database, log debug -> cb run
%dev.quarkus.log.category."@@PACKAGE@@".level = DEBUG
%dev.quarkus.log.console.color = true
%dev.quarkus.log.console.format =%d{yyyy-MM-dd HH:mm:ss,SSS} - %.1p - [%H|%i|%t{id}] - %-50c{49} | %m%n
%dev.quarkus.log.file.enable = true
%dev.quarkus.log.file.format =%d{yyyy-MM-dd HH:mm:ss,SSS} - %.1p - [%H|%i|%t{id}] - %-80c{79} - %-15.15X{logInformation} | %m%n
%dev.quarkus.log.file.path=../../../@@PROJECT_NAME@@.log
#%dev.quarkus.hibernate-orm.database.generation = update # or none
#%dev.quarkus.liquibase.migrate-at-start = true
#%dev.quarkus.hibernate-orm.sql-load-script = no-file
#%dev.quarkus.datasource.db-kind = @@kubernetesDatabaseType@@
#%dev.quarkus.datasource.username = postgres
#%dev.quarkus.datasource.password = admin
#%dev.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/@@PROJECT_NAME@@