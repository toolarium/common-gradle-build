/*
 * signing.gradle
 *
 * Copyright by toolarium, all rights reserved.
 * 
 * This file is part of the toolarium common-gradle-build.
 * 
 * The common-gradle-build is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * The common-gradle-build is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with Foobar. If not, see <http://www.gnu.org/licenses/>.
 */
 
 
apply plugin: 'signing'


/***************************************************************************************
 * Signing
 ***************************************************************************************/
signing {
	required {
		// signing is required if this is a release version and the artifacts are to be published
		
		!project.ext.isSnapshotVersion && tasks.withType(PublishToMavenRepository).find {
			 gradle.taskGraph.hasTask it
		}

		def userHomeDirectory = ''
		if (project.hasProperty('userHomeDirectory')) {
			userHomeDirectory = project.getProperty('userHomeDirectory')
		}		
		
		def signingKeyId = "signing.keyId"
		def signingPassword = "signing.password"
		def signingSecretKeyRingFile = "signing.secretKeyRingFile"
		def configFileName = "${userHomeDirectory}.gradle/gradle.properties file"

		if (!project.hasProperty(signingKeyId) || !project.hasProperty(signingPassword) || !project.hasProperty(signingSecretKeyRingFile)) {
			def signingFileNames = colorize(HIGHLITE_LEVEL, signingKeyId) + ",  " + colorize(HIGHLITE_LEVEL, signingPassword) + " and " + colorize(HIGHLITE_LEVEL, signingSecretKeyRingFile)
			
			printLine(ERROR_LEVEL, true)
			printInfo(colorize(ERROR_LEVEL, 'ERROR') + ": ${signingFileNames} has to be ")
			printInfo("       configured, e.g. in " + colorize(HIGHLITE_LEVEL, configFileName) + "!")
			printLine(ERROR_LEVEL, true)
		
			//signingKeyId = console.readLine("PGP Key Id: ")
			//signingPassword = console.readPassword("PGP Private Key Password: ")		
			//signingSecretKeyRingFile = console.readLine("PGP Secret Key Ring File (absolute path): ")
			throw new GradleException("ERROR: ${signingKeyId}, ${signingPassword} and ${signingSecretKeyRingFile} has to be configured, e.g. in ${configFileName}!")
		}
	}
	
	//sign publishing.publications.mavenJava
	sign publishing.publications
}
