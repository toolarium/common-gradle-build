/*
 * download.gradle
 *
 * Copyright by toolarium, all rights reserved.
 * MIT License: https://mit-license.org
 */

apply from: "${commonGradleBuildElementPath}/constants.gradle"

/*
buildscript {

	repositories {
		mavenCentral()
		def github = ivy {
			url 'https://github.com/'
			patternLayout {
				artifact '/[organisation]/[module]/archive/[revision].[ext]'
			}
			metadataSources { artifact() }
		}
		exclusiveContent {
			forRepositories(github)
			filter { includeGroup("jmeter-gradle-plugin") }
		}
	}
	
    dependencies {
        classpath 'gradle-templates:gradle-templates:1.5'
    }
}
*/


task download {
    doLast {
        def f = new File('gradlel')
        new URL('https://raw.githubusercontent.com/toolarium/common-gradle-build/master/gradle/').withInputStream{ i -> f.withOutputStream{ it << i }}
    }
}

/***************************************************************************************
 * download
 ***************************************************************************************/
task downloadCommonGradleVersion { 	
	group = 'Verification'
	description = 'Read the version'

	def f = new File('/tmp/library.gradle')
	if (!f.exists()) {
		new URL('https://raw.githubusercontent.com/toolarium/common-gradle-build/master/gradle/library.gradle').withInputStream{ i -> f.withOutputStream{ it << i }}
	}

	ext.commonGradleBuildElementPath="${commonGradleUrl}/build-element"
	if (!f.exists()) {
		new URL('https://raw.githubusercontent.com/toolarium/common-gradle-build/master/gradle/library.gradle').withInputStream{ i -> f.withOutputStream{ it << i }}
	}
	
}
