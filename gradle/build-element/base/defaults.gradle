/*
 * defaults.gradle
 *
 * Copyright by toolarium, all rights reserved.
 * MIT License: https://mit-license.org
 */


/***************************************************************************************
 * gradle cache and home properties file
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("userHomeDirectory", System.properties['user.home'].replace('\\', '/'))
if ("windows" == getOsName()) {
	setCommonGradleDefaultPropertyIfNull("userHomeDirectory", '%USERPROFILE%/')
} else {
	setCommonGradleDefaultPropertyIfNull("userHomeDirectory", '~/')
}

setCommonGradleDefaultPropertyIfNull("gradleHome", "$userHomeDirectory/.gradle")
setCommonGradleDefaultPropertyIfNull("gradleHomePropertiesFile", "$gradleHome/gradle.properties")
setCommonGradleDefaultPropertyIfNull("defaultCommonGradleBuildUrl", "https://raw.githubusercontent.com/toolarium/common-gradle-build/master/gradle/common.gradle")
setCommonGradleDefaultPropertyIfNull("commonGradleBuildReleasesUrl", "https://api.github.com/repos/toolarium/common-gradle-build/releases")
setCommonGradleDefaultPropertyIfNull("commonGradleBuildReleasesPreRelease", false)
setCommonGradleDefaultPropertyIfNull("commonGradleBuildReleaseVersion", "")
setCommonGradleDefaultPropertyIfNull("commonGradleBuildGitUrl", "https://github.com/toolarium/common-gradle-build.git")
setCommonGradleDefaultPropertyIfNull("commonGradleBuildHomeGitUrl", "")
setCommonGradleDefaultPropertyIfNull("commonGradleBuildHomeVersionFileUrl", "")
setCommonGradleDefaultPropertyIfNull("commonGradleBuildCustomConfigName", "Custom Config")


/***************************************************************************************
 * gradle cache properties file
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("commonGradleBuildCache", "$gradleHome/common-gradle-build")
setCommonGradleDefaultPropertyIfNull("commonGradleBuildCacheLastCheckFile", "$commonGradleBuildCache/lastCheck.properties")
setCommonGradleDefaultPropertyIfNull("commonGradleBuildCacheLastCheckTimeout", 1000 * 60 * 60 * 12) // one day


/***************************************************************************************
 * base path
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("commonGradleBuildElementPath", "${commonGradleBuildUrl}/build-element")

// template directories
setCommonGradleDefaultPropertyIfNull("commonGradleTemplatePathName", "template")
setCommonGradleDefaultPropertyIfNull("commonGradleTemplatePath", "${commonGradleBuildUrl}/${commonGradleTemplatePathName}")
setCommonGradleDefaultPropertyIfNull("commonGradleTemplateBasePath", "${commonGradleTemplatePath}/base")
setCommonGradleDefaultPropertyIfNull("commonGradleTemplateCheckstylePath", "${commonGradleTemplatePath}/checkstyle")
setCommonGradleDefaultPropertyIfNull("commonGradleTemplateConfigPath", "${commonGradleTemplatePath}/config")
setCommonGradleDefaultPropertyIfNull("commonGradleTemplateEclipsePath", "${commonGradleTemplatePath}/eclipse")
setCommonGradleDefaultPropertyIfNull("commonGradleTemplateJavaPath", "${commonGradleTemplatePath}/java")
setCommonGradleDefaultPropertyIfNull("commonGradleTemplateNodeJsPath", "${commonGradleTemplatePath}/nodejs")
setCommonGradleDefaultPropertyIfNull("commonGradleTemplateQuarkusPath", "${commonGradleTemplatePath}/quarkus")
setCommonGradleDefaultPropertyIfNull("commonGradleTemplateScmPath", "${commonGradleTemplatePath}/scm")

// common gradle conf directory
setCommonGradleDefaultPropertyIfNull("commonGradleConfigPathName", "conf")
setCommonGradleDefaultPropertyIfNull("commonGradleConfigPath", "${commonGradleBuildUrl}/${commonGradleConfigPathName}")


/***************************************************************************************
 * common project files
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("settingsGradleFile", "$rootDirectory/settings.gradle")
setCommonGradleDefaultPropertyIfNull("gradlePropertiesFile", "$rootDirectory/gradle.properties")
setCommonGradleDefaultPropertyIfNull("buildGradleFile", "$rootDirectory/build.gradle")
setCommonGradleDefaultPropertyIfNull("detectMinimalBuildGradleFile", 2)
setCommonGradleDefaultPropertyIfNull("versionFilename", "VERSION")
setCommonGradleDefaultPropertyIfNull("versionFile", "$rootDirectory/$versionFilename")
setCommonGradleDefaultPropertyIfNull("readmeFilename", "README.md")
setCommonGradleDefaultPropertyIfNull("readmeFile", "$rootDirectory/$readmeFilename")
setCommonGradleDefaultPropertyIfNull("includeReadmeFile", false)
setCommonGradleDefaultPropertyIfNull("licenseFilename", "LICENSE")
setCommonGradleDefaultPropertyIfNull("licenseFile", "$rootDirectory/$licenseFilename")
setCommonGradleDefaultPropertyIfNull("changelogFilename", "CHANGELOG.md")
setCommonGradleDefaultPropertyIfNull("changelogFile", "$rootDirectory/$changelogFilename")
setCommonGradleDefaultPropertyIfNull("editorConfigFilename", ".editorconfig")
setCommonGradleDefaultPropertyIfNull("editorConfigFile", "$rootDirectory/$editorConfigFilename")
setCommonGradleDefaultPropertyIfNull("javaVersionConfigFilename", ".java-version")
setCommonGradleDefaultPropertyIfNull("javaVersionConfigFile", "$rootDirectory/$javaVersionConfigFilename")
setCommonGradleDefaultPropertyIfNull("includeLicenseFile", true)
setCommonGradleDefaultPropertyIfNull("includeVersionFile", true)
setCommonGradleDefaultPropertyIfNull("createChangelogFile", false)
setCommonGradleDefaultPropertyIfNull("includeChangelogFile", false)

// project config directory
setCommonGradleDefaultPropertyIfNull("configDirectoryName", "conf")
setCommonGradleDefaultPropertyIfNull("configDirectory", "$rootDirectory/$configDirectoryName")
setCommonGradleDefaultPropertyIfNull("configIgnoreEmptyPackages", true)
setCommonGradleDefaultPropertyIfNull("configPackages", "")

// build directory
setCommonGradleDefaultPropertyIfNull("gradleBuildDirectory", "$rootDirectory/build")

// .gradle directory
setCommonGradleDefaultPropertyIfNull("gradleDirectory", "$rootDirectory/.gradle")

// docs directory
setCommonGradleDefaultPropertyIfNull("includeDocsDirectoryInSource", false)
setCommonGradleDefaultPropertyIfNull("docsDirectoryName", "docs")
setCommonGradleDefaultPropertyIfNull("docsDirectory", "$rootDirectory/$docsDirectoryName")

// logs directory
setCommonGradleDefaultPropertyIfNull("logsDirectoryName", "logs")
setCommonGradleDefaultPropertyIfNull("logsDirectory", "$rootDirectory/$logsDirectoryName")

// temp directory
setCommonGradleDefaultPropertyIfNull("tempDirectoryName", "temp")
setCommonGradleDefaultPropertyIfNull("tempDirectory", "$rootDirectory/$tempDirectoryName")

// src directories
setCommonGradleDefaultPropertyIfNull("srcMainDirectoryName", "main")
setCommonGradleDefaultPropertyIfNull("srcTestDirectoryName", "test")
setCommonGradleDefaultPropertyIfNull("srcDirectoryName", "src")
setCommonGradleDefaultPropertyIfNull("srcDirectory", "$rootDirectory/$srcDirectoryName")
setCommonGradleDefaultPropertyIfNull("srcMainDirectory", "${srcDirectory}/${srcMainDirectoryName}")
setCommonGradleDefaultPropertyIfNull("srcTestDirectory", "${srcDirectory}/${srcTestDirectoryName}")

// resources directories
setCommonGradleDefaultPropertyIfNull("resourceDirectoryName", "resources")
setCommonGradleDefaultPropertyIfNull("srcMainResourcesDirectory", "${srcMainDirectory}/${resourceDirectoryName}")
setCommonGradleDefaultPropertyIfNull("srcTestResourcesDirectory", "${srcTestDirectory}/${resourceDirectoryName}")

// software generation settings
setCommonGradleDefaultPropertyIfNull("generatedCommonGradleBaseBuildSources", "$rootDirectory/build/generated/sources")
setCommonGradleDefaultPropertyIfNull("generatedCommonGradleBuildSources", "$generatedCommonGradleBaseBuildSources/common-gradle-build")


/***************************************************************************************
 * view init settings
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("initShowJava", true)
setCommonGradleDefaultPropertyIfNull("initShowRuntime", false)
setCommonGradleDefaultPropertyIfNull("initShowPath", true)
setCommonGradleDefaultPropertyIfNull("initShowTempPath", false)
setCommonGradleDefaultPropertyIfNull("initShowScm", true)
setCommonGradleDefaultPropertyIfNull("initScmForNewProjects", true)
setCommonGradleDefaultPropertyIfNull("initScmWithNewFiles", true)
setCommonGradleDefaultPropertyIfNull("initCheckstyle", true)
setCommonGradleDefaultPropertyIfNull("initShowGradle", true)
setCommonGradleDefaultPropertyIfNull("initEclipse", true)
setCommonGradleDefaultPropertyIfNull("installGradleWrapper", true)


/***************************************************************************************
 * Use git credentials manager
 * Issue in grgit
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("scmUseCredentialManager", false)


/***************************************************************************************
 * show created artefacts
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("showCreatedArtefacts", true)


/***************************************************************************************
 * project basic settings
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("licenseOrganisation", "${rootProject.name}")
setCommonGradleDefaultPropertyIfNull("licenseText", "MIT License: https://mit-license.org")
setCommonGradleDefaultPropertyIfNull("licenseUrl", "https://mit-license.org")
setCommonGradleDefaultPropertyIfNull("projectUrl", "")
setCommonGradleDefaultPropertyIfNull("projectType", "java-library")


/***************************************************************************************
 * compile settings
 ***************************************************************************************/
//setCommonGradleDefaultPropertyIfNull("sourceCompatibility", JavaVersion.VERSION_1_8)
//setCommonGradleDefaultPropertyIfNull("targetCompatibility", JavaVersion.VERSION_1_8)
//setCommonGradleDefaultPropertyIfNull("sourceCompatibility", JavaVersion.VERSION_11)
//setCommonGradleDefaultPropertyIfNull("targetCompatibility", JavaVersion.VERSION_11)
setCommonGradleDefaultPropertyIfNull("sourceCompatibility", parseVersion("${System.properties['java.version']}"))
setCommonGradleDefaultPropertyIfNull("targetCompatibility", parseVersion("${System.properties['java.version']}"))
setCommonGradleDefaultPropertyIfNull("fileEncoding", "UTF-8")
setCommonGradleDefaultPropertyIfNull("compileJavaFork", false)
setCommonGradleDefaultPropertyIfNull("compileJavaHome", "")


/***************************************************************************************
 * repository settings
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("allowMavenCentralRepository", true)
setCommonGradleDefaultPropertyIfNull("allowGoogleRepository", true)
setCommonGradleDefaultPropertyIfNull("allowJCenterRepository", true)
setCommonGradleDefaultPropertyIfNull("mavenPublishUrl", "https://oss.sonatype.org/service/local/staging/deploy/maven2") // by sonatype you deploy to staging, after go to -> https://oss.sonatype.org/#stagingRepositories -> close
setCommonGradleDefaultPropertyIfNull("mavenRepositoryUrl", "https://oss.sonatype.org/content/repositories/public")
setCommonGradleDefaultPropertyIfNull("allowMavenRepository", false)
setCommonGradleDefaultPropertyIfNull("mavenStagingPublishUrl", "https://oss.sonatype.org/service/local/staging/deploy/maven2")
setCommonGradleDefaultPropertyIfNull("mavenStagingRepositoryUrl", "https://oss.sonatype.org/content/repositories/staging")
setCommonGradleDefaultPropertyIfNull("allowMavenStagingRepository", false)
setCommonGradleDefaultPropertyIfNull("mavenSnapshotPublishUrl", "https://oss.sonatype.org/content/repositories/snapshots")
setCommonGradleDefaultPropertyIfNull("mavenSnapshotRepositoryUrl", "https://oss.sonatype.org/content/repositories/snapshots")
setCommonGradleDefaultPropertyIfNull("allowMavenSnapshotRepository", true)


// use as default the sonatype repository -> url, username and password
if (!project.hasProperty('mavenUsername')) {
	if (project.hasProperty('sonatypeUsername')){
		setCommonGradleDefaultPropertyIfNull("mavenUsername", sonatypeUsername)
	} else {
		setCommonGradleDefaultPropertyIfNull("mavenUsername", System.properties['user.name'])
	}
}

if (!project.hasProperty('publishingUsername')) {
	if (project.hasProperty('mavenUsername')){
		setCommonGradleDefaultPropertyIfNull("publishingUsername", mavenUsername)
	}
}

if (!project.hasProperty('mavenPassword')) {
	if (project.hasProperty('sonatypePassword')){
		setCommonGradleDefaultPropertyIfNull("mavenPassword", sonatypePassword, false)
	}
}


/***************************************************************************************
 * testing
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("initTesting", true)
setCommonGradleDefaultPropertyIfNull("useJUnit", true)

if (initTesting) {
	if (useJUnit) {
		setCommonGradleDefaultPropertyIfNull("testDependencyVersion", "5.6.2")

		if (testDependencyVersion!=null && !testDependencyVersion.isEmpty()) {
			if (testDependencyVersion.startsWith("4.")) {
				setCommonGradleDefaultPropertyIfNull("testImplementationDependency", "junit:junit:${testDependencyVersion}")
				setCommonGradleDefaultPropertyIfNull("testRuntimeOnlyDependency", "junit:junit:${testDependencyVersion}")
			} else {
				setCommonGradleDefaultPropertyIfNull("testImplementationDependency", "org.junit.jupiter:junit-jupiter-api:${testDependencyVersion}")
				setCommonGradleDefaultPropertyIfNull("testRuntimeOnlyDependency", "org.junit.jupiter:junit-jupiter-engine:${testDependencyVersion}")
			}
		}
	}
}


/***************************************************************************************
 * code quality: checkstyle
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("checkstyleToolDefaultVersion", '8.27')
//setCommonGradleDefaultPropertyIfNull("checkstyleToolVersion", '8.27')
setCommonGradleDefaultPropertyIfNull("checkstyleMaxWarnings", 0)
setCommonGradleDefaultPropertyIfNull("checkstyleXMLReport", false)
setCommonGradleDefaultPropertyIfNull("checkstyleHTMLReport", true)
setCommonGradleDefaultPropertyIfNull("checkstyleConfigurationPath", "${configDirectory}/checkstyle")
setCommonGradleDefaultPropertyIfNull("checkstyleConfigurationFilename", "checkstyle.xml")
setCommonGradleDefaultPropertyIfNull("checkstyleConfiguration", "${checkstyleConfigurationPath}/${checkstyleConfigurationFilename}")
setCommonGradleDefaultPropertyIfNull("referenceCheckstyleConfiguration", "false")


/***************************************************************************************
 * test coverage: jacoco
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("jacocoToolDefaultVersion", '0.8.5')
setCommonGradleDefaultPropertyIfNull("jacocoXMLReport", false)
setCommonGradleDefaultPropertyIfNull("jacocoCSVReport", false)
setCommonGradleDefaultPropertyIfNull("jacocoHTMLReport", true)
setCommonGradleDefaultPropertyIfNull("jacocoReportPath", "${buildDir}/reports/testcoverage")


/***************************************************************************************
 * quarkus plugin defaults
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("quarkusPluginVersion", '1.8.1.Final')
setCommonGradleDefaultPropertyIfNull("quarkusPlatformArtifactId", 'quarkus-universe-bom')
setCommonGradleDefaultPropertyIfNull("quarkusPlatformGroupId", 'io.quarkus')
setCommonGradleDefaultPropertyIfNull("quarkusPlatformVersion", "${quarkusPluginVersion}")


/***************************************************************************************
 * node plugin defaults
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("nodePluginVersion", '2.2.4')


/***************************************************************************************
 * openapi plugin defaults
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("srcMainApiSpecDirectoryName", "api-spec")
setCommonGradleDefaultPropertyIfNull("srcMainApiSpecDirectory", "${srcMainDirectory}/${srcMainApiSpecDirectoryName}")
//setCommonGradleDefaultPropertyIfNull("openapiPluginVersion", '4.3.1')
setCommonGradleDefaultPropertyIfNull("openapiPluginVersion", '5.0.0-beta')
//setCommonGradleDefaultPropertyIfNull("openapiLibrary", 'okhttp-gson')
//setCommonGradleDefaultPropertyIfNull("openapiGeneratorName", 'java')
setCommonGradleDefaultPropertyIfNull("openapiGeneratorName", 'jaxrs-spec')

setCommonGradleDefaultPropertyIfNull("openapiLibrary", 'quarkus')
setCommonGradleDefaultPropertyIfNull("openapiDocs", 'true')
setCommonGradleDefaultPropertyIfNull("openapiTests", 'true')
setCommonGradleDefaultPropertyIfNull("openapiModelDocs", 'false')
setCommonGradleDefaultPropertyIfNull("openapiModelTests", 'false')

setCommonGradleDefaultPropertyIfNull("openapiDateLibrary", "java8")
setCommonGradleDefaultPropertyIfNull("openapiInterfaceOnly", "true")
setCommonGradleDefaultPropertyIfNull("openapiUseJava8Features", 'true')
setCommonGradleDefaultPropertyIfNull("openapiUseBeanValidation", 'false')
setCommonGradleDefaultPropertyIfNull("openapiNullable", "false")
setCommonGradleDefaultPropertyIfNull("openapiAsyncNative", 'false')
setCommonGradleDefaultPropertyIfNull("openapiBigDecimalAsString", 'true')
setCommonGradleDefaultPropertyIfNull("openapiBooleanGetterPrefix", "get")
setCommonGradleDefaultPropertyIfNull("openapiHideGenerationTimestamp", 'true')
setCommonGradleDefaultPropertyIfNull("openapiUseGzipFeature", 'true')


/***************************************************************************************
 * gradle jvm arguments
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("gradlePropertiesJvmArgs", "-Xmx1g -XX:MaxHeapSize=1g -XX:MaxPermSize=256m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=${fileEncoding}")
//setCommonGradleDefaultPropertyIfNull("gradlePropertiesLogLevel", "lifecycle")
setCommonGradleDefaultPropertyIfNull("gradlePropertiesLogLevel", "quiet")
setCommonGradleDefaultPropertyIfNull("gradlePropertiesConsole", "rich")
setCommonGradleDefaultPropertyIfNull("gradlePropertiesWarningMode", "all")
//gradle.startParameter.showStacktrace = org.gradle.api.logging.configuration.ShowStacktrace.ALWAYS


/***************************************************************************************
 * set project validation patterns
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("projectNameRegularExpressionPattern", '^[a-zA-Z0-9\\-]+$')
setCommonGradleDefaultPropertyIfNull("projectGroupIdRegularExpressionPattern", '^[a-zA-Z0-9\\.]+$')
setCommonGradleDefaultPropertyIfNull("projectComponentIdRegularExpressionPattern", '^[a-zA-Z0-9\\-]+$')
setCommonGradleDefaultPropertyIfNull("projectComponentIdIsPartOfProjectName", true)
setCommonGradleDefaultPropertyIfNull("projectComponentIdSeparator", "-")
setCommonGradleDefaultPropertyIfNull("projectRootPackageNamePrefix", "")
setCommonGradleDefaultPropertyIfNull("validateRootFiles", true)
setCommonGradleDefaultPropertyIfNull("validateRootDirectories", false)
setCommonGradleDefaultPropertyIfNull("validateProjectNameAndFolder", false)


/***************************************************************************************
 * set project type rules
 ***************************************************************************************/
 // projectNameTypeRegularExpressionPattern is used to support additional check names 
 // against a pattern. The projectNameRegularExpressionPattern builds the general name 
 // pattern, whereas the projectNameTypeRegularExpressionPattern could check patterns 
 // for specific name rules depending on the project type. Null or empty means no 
 // additional rule.
setCommonGradleDefaultPropertyIfNull("projectNameTypeRegularExpressionPattern", '')

// In normal case multiple source files is the regular case. For specific project
// types this can be used to have only a single input file.
setCommonGradleDefaultPropertyIfNull("allowMultipleSourceFiles", 'true')

// Define the input source file pattern. Null or empty means no pattern. In
// case of a pattern definition is made, please also adapt the 
// sampleInputSourceFileName
setCommonGradleDefaultPropertyIfNull("inputSourceFilePattern", '')

// Define the sample input source file name. Null or empty takes the default.
setCommonGradleDefaultPropertyIfNull("sampleInputSourceFileName", '')


/***************************************************************************************
 * allowedMainDirectories & allowedMainFiles
 ***************************************************************************************/
addCommonGradlePropertyList("allowedMainDirectories", gradleBuildDirectory)
addCommonGradlePropertyList("allowedMainDirectories", gradleDirectory)
addCommonGradlePropertyList("allowedMainDirectories", configDirectory)
addCommonGradlePropertyList("allowedMainDirectories", srcDirectory)
addCommonGradlePropertyList("allowedMainDirectories", docsDirectory)
addCommonGradlePropertyList("allowedMainDirectories", logsDirectory)
addCommonGradlePropertyList("allowedMainDirectories", tempDirectory)
addCommonGradlePropertyList("allowedMainFiles", licenseFile)
addCommonGradlePropertyList("allowedMainFiles", readmeFile)
addCommonGradlePropertyList("allowedMainFiles", versionFile)
addCommonGradlePropertyList("allowedMainFiles", buildGradleFile)
addCommonGradlePropertyList("allowedMainFiles", gradlePropertiesFile)
addCommonGradlePropertyList("allowedMainFiles", settingsGradleFile)
addCommonGradlePropertyList("allowedMainFiles", changelogFile)
addCommonGradlePropertyList("allowedMainFiles", editorConfigFile)
addCommonGradlePropertyList("allowedMainFiles", javaVersionConfigFile)

if (project.hasProperty('installGradleWrapper') && project.getProperty('installGradleWrapper')) {
	addCommonGradlePropertyList("allowedMainDirectories", "$rootDirectory/gradle")
	addCommonGradlePropertyList("allowedMainFiles", "$rootDirectory/gradlew")
	addCommonGradlePropertyList("allowedMainFiles", "$rootDirectory/gradlew.bat")
}


/***************************************************************************************
 * version default settings
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("majorVersionNumber", 0)
setCommonGradleDefaultPropertyIfNull("minorVersionNumber", 0)
setCommonGradleDefaultPropertyIfNull("revisionVersionNumber", 1)
setCommonGradleDefaultPropertyIfNull("qualifierVersionNumber", SNAPSHOT_TAG_NAME)
setCommonGradleDefaultPropertyIfNull("isReleaseVersion", false)
setCommonGradleDefaultPropertyIfNull("scmVersionNumber", '')


/***************************************************************************************
 * online connection url
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("onlineCheckConnectionUrl", 'www.google.com')
setCommonGradleDefaultPropertyIfNull("onlineCheckConnectionUrlTimeout", 1500)


/***************************************************************************************
 * valid build attributes
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("validBuild", true)
setCommonGradleDefaultPropertyIfNull("validBuildMessage", "")
setCommonGradleDefaultPropertyIfNull("errorMessagePrefix", "\nERROR")
setCommonGradleDefaultPropertyIfNull("logErrorMessage", false)
setCommonGradleDefaultPropertyIfNull("errorMessageColor", WARN_LEVEL)


/***************************************************************************************
 * resource bundle
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("initResourceBundle", false)
setCommonGradleDefaultPropertyIfNull("hasResourceBundle", false)
setCommonGradleDefaultPropertyIfNull("commonGradleConfigResourcebundleName", "Resourcebundle.xls")
setCommonGradleDefaultPropertyIfNull("commonGradleConfigResourcebundlePath", "${configDirectory}/${commonGradleConfigResourcebundleName}")
setCommonGradleDefaultPropertyIfNull("commonGradleResourcebundleOutputPath", "${generatedCommonGradleBuildSources}/resources/main")
setCommonGradleDefaultPropertyIfNull("commonGradleResourcebundleOutputNamePrefix", "resourcebundle")
setCommonGradleDefaultPropertyIfNull("commonGradleResourcebundleJsonSupport", false)
setCommonGradleDefaultPropertyIfNull("commonGradleConfigResourcebundleMaxMemory", "512m")


/***************************************************************************************
 * resource bundle
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("commonGradleJptoolsModelGeneratorVersion", "1.7.2")
setCommonGradleDefaultPropertyIfNull("commonGradleJexcelapiModelGeneratorVersion", "2.6.12")
