/*
 * defaults.gradle
 *
 * Copyright by toolarium, all rights reserved.
 * MIT License: https://mit-license.org
 */


/***************************************************************************************
 * gradle cache and home properties file
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("userHomeDirectory", System.properties['user.home'].replace('\\', '/'))
if ("windows" == getOsName()) {
	setCommonGradleDefaultPropertyIfNull("userHomeDirectory", '%USERPROFILE%/')
} else {
	setCommonGradleDefaultPropertyIfNull("userHomeDirectory", '~/')
}

setCommonGradleDefaultPropertyIfNull("gradleHome", "$userHomeDirectory/.gradle")
setCommonGradleDefaultPropertyIfNull("gradleHomePropertiesFile", "$gradleHome/gradle.properties")
setCommonGradleDefaultPropertyIfNull("defaultCommonGradleBuildUrl", "https://raw.githubusercontent.com/toolarium/common-gradle-build/master/gradle/common.gradle")
setCommonGradleDefaultPropertyIfNull("commonGradleBuildReleasesUrl", "https://api.github.com/repos/toolarium/common-gradle-build/releases")
setCommonGradleDefaultPropertyIfNull("commonGradleBuildReleasesPreRelease", false)
setCommonGradleDefaultPropertyIfNull("commonGradleBuildGitUrl", "https://github.com/toolarium/common-gradle-build.git")
setCommonGradleDefaultPropertyIfNull("commonGradleBuildHomeGitUrl", "")
setCommonGradleDefaultPropertyIfNull("commonGradleBuildHomeVersionFileUrl", "")


/***************************************************************************************
 * gradle cache properties file
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("commonGradleBuildCache", "$gradleHome/common-gradle-build")
setCommonGradleDefaultPropertyIfNull("commonGradleBuildCacheLastCheckFile", "$commonGradleBuildCache/lastCheck.properties")
setCommonGradleDefaultPropertyIfNull("commonGradleBuildCacheLastCheckTimeout", 1000 * 60 * 60 * 12) // one day


/***************************************************************************************
 * base path
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("commonGradleBuildElementPath", "${commonGradleBuildUrl}/build-element")

// template directories
setCommonGradleDefaultPropertyIfNull("commonGradleTemplatePathName", "template")
setCommonGradleDefaultPropertyIfNull("commonGradleTemplatePath", "${commonGradleBuildUrl}/${commonGradleTemplatePathName}")
setCommonGradleDefaultPropertyIfNull("commonGradleTemplateBasePath", "${commonGradleTemplatePath}/base")
setCommonGradleDefaultPropertyIfNull("commonGradleTemplateJavaPath", "${commonGradleTemplatePath}/java")
setCommonGradleDefaultPropertyIfNull("commonGradleTemplateScmPath", "${commonGradleTemplatePath}/scm")
setCommonGradleDefaultPropertyIfNull("commonGradleTemplateConfigPath", "${commonGradleTemplatePath}/config")


/***************************************************************************************
 * common project files
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("settingsGradleFile", "$rootDirectory/settings.gradle")
setCommonGradleDefaultPropertyIfNull("gradlePropertiesFile", "$rootDirectory/gradle.properties")
setCommonGradleDefaultPropertyIfNull("buildGradleFile", "$rootDirectory/build.gradle")
setCommonGradleDefaultPropertyIfNull("detectMinimalBuildGradleFile", 2)
setCommonGradleDefaultPropertyIfNull("versionFilename", "VERSION")
setCommonGradleDefaultPropertyIfNull("versionFile", "$rootDirectory/$versionFilename")
setCommonGradleDefaultPropertyIfNull("readmeFilename", "README.md")
setCommonGradleDefaultPropertyIfNull("readmeFile", "$rootDirectory/$readmeFilename")
setCommonGradleDefaultPropertyIfNull("includeReadmeFile", false)
setCommonGradleDefaultPropertyIfNull("licenseFilename", "LICENSE")
setCommonGradleDefaultPropertyIfNull("licenseFile", "$rootDirectory/$licenseFilename")
setCommonGradleDefaultPropertyIfNull("changelogFilename", "CHANGELOG.md")
setCommonGradleDefaultPropertyIfNull("changelogFile", "$rootDirectory/$changelogFilename")
setCommonGradleDefaultPropertyIfNull("editorConfigFilename", ".editorconfig")
setCommonGradleDefaultPropertyIfNull("editorConfigFile", "$rootDirectory/$editorConfigFilename")
setCommonGradleDefaultPropertyIfNull("javaVersionConfigFilename", ".java-version")
setCommonGradleDefaultPropertyIfNull("javaVersionConfigFile", "$rootDirectory/$javaVersionConfigFilename")
setCommonGradleDefaultPropertyIfNull("includeLicenseFile", true)
setCommonGradleDefaultPropertyIfNull("includeVersionFile", true)
setCommonGradleDefaultPropertyIfNull("createChangelogFile", false)
setCommonGradleDefaultPropertyIfNull("includeChangelogFile", false)

// config directory
setCommonGradleDefaultPropertyIfNull("configDirectoryName", "conf")
setCommonGradleDefaultPropertyIfNull("configDirectory", "$rootDirectory/$configDirectoryName")
setCommonGradleDefaultPropertyIfNull("configIgnoreEmptyPackages", true)
setCommonGradleDefaultPropertyIfNull("configPackages", "")

// build directory
setCommonGradleDefaultPropertyIfNull("buildDirectory", "$rootDirectory/build")

// .gradle directory
setCommonGradleDefaultPropertyIfNull("gradleDirectory", "$rootDirectory/.gradle")

// docs directory
setCommonGradleDefaultPropertyIfNull("includeDocsDirectoryInSource", false)
setCommonGradleDefaultPropertyIfNull("docsDirectoryName", "docs")
setCommonGradleDefaultPropertyIfNull("docsDirectory", "$rootDirectory/$docsDirectoryName")

// logs directory
setCommonGradleDefaultPropertyIfNull("logsDirectoryName", "logs")
setCommonGradleDefaultPropertyIfNull("logsDirectory", "$rootDirectory/$logsDirectoryName")

// temp directory
setCommonGradleDefaultPropertyIfNull("tempDirectoryName", "temp")
setCommonGradleDefaultPropertyIfNull("tempDirectory", "$rootDirectory/$tempDirectoryName")

// src directories
setCommonGradleDefaultPropertyIfNull("srcMainDirectoryName", "main")
setCommonGradleDefaultPropertyIfNull("srcTestDirectoryName", "test")
setCommonGradleDefaultPropertyIfNull("srcDirectoryName", "src")
setCommonGradleDefaultPropertyIfNull("srcDirectory", "$rootDirectory/$srcDirectoryName")
setCommonGradleDefaultPropertyIfNull("srcMainDirectory", "${srcDirectory}/${srcMainDirectoryName}")
setCommonGradleDefaultPropertyIfNull("srcTestDirectory", "${srcDirectory}/${srcTestDirectoryName}")

// software generation settings
setCommonGradleDefaultPropertyIfNull("generatedCommonGradleBuildSources", "build/generated/sources/common-gradle-build")


/***************************************************************************************
 * view init settings
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("initShowJava", true)
setCommonGradleDefaultPropertyIfNull("initShowRuntime", false)
setCommonGradleDefaultPropertyIfNull("initShowPath", true)
setCommonGradleDefaultPropertyIfNull("initShowTempPath", false)
setCommonGradleDefaultPropertyIfNull("initShowScm", true)
setCommonGradleDefaultPropertyIfNull("initScmForNewProjects", true)
setCommonGradleDefaultPropertyIfNull("initScmWithNewFiles", true)
setCommonGradleDefaultPropertyIfNull("initCheckstyle", true)
setCommonGradleDefaultPropertyIfNull("initShowGradle", true)
setCommonGradleDefaultPropertyIfNull("installGradleWrapper", true)


/***************************************************************************************
 * show created artefacts
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("showCreatedArtefacts", true)


/***************************************************************************************
 * project basic settings
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("licenseText", "MIT License: https://mit-license.org")
setCommonGradleDefaultPropertyIfNull("licenseUrl", "https://mit-license.org")
setCommonGradleDefaultPropertyIfNull("projectUrl", "")
setCommonGradleDefaultPropertyIfNull("projectType", "java-library")


/***************************************************************************************
 * compile settings
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("sourceCompatibility", JavaVersion.VERSION_1_8)
setCommonGradleDefaultPropertyIfNull("targetCompatibility", JavaVersion.VERSION_1_8)
setCommonGradleDefaultPropertyIfNull("fileEncoding", "UTF-8")
setCommonGradleDefaultPropertyIfNull("compileJavaFork", false)
setCommonGradleDefaultPropertyIfNull("compileJavaHome", "")


/***************************************************************************************
 * repository settings
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("allowMavenCentralRepository", true)
setCommonGradleDefaultPropertyIfNull("allowGoogleRepository", true)
setCommonGradleDefaultPropertyIfNull("allowJCenterRepository", true)
setCommonGradleDefaultPropertyIfNull("mavenPublishUrl", "https://oss.sonatype.org/service/local/staging/deploy/maven2") // by sonatype you deploy to staging, after go to -> https://oss.sonatype.org/#stagingRepositories -> close
setCommonGradleDefaultPropertyIfNull("mavenRepositoryUrl", "https://oss.sonatype.org/content/repositories/public")
setCommonGradleDefaultPropertyIfNull("allowMavenRepository", false)
setCommonGradleDefaultPropertyIfNull("mavenStagingPublishUrl", "https://oss.sonatype.org/service/local/staging/deploy/maven2")
setCommonGradleDefaultPropertyIfNull("mavenStagingRepositoryUrl", "https://oss.sonatype.org/content/repositories/staging")
setCommonGradleDefaultPropertyIfNull("allowMavenStagingRepository", false)
setCommonGradleDefaultPropertyIfNull("mavenSnapshotPublishUrl", "https://oss.sonatype.org/content/repositories/snapshots")
setCommonGradleDefaultPropertyIfNull("mavenSnapshotRepositoryUrl", "https://oss.sonatype.org/content/repositories/snapshots")
setCommonGradleDefaultPropertyIfNull("allowMavenSnapshotRepository", true)


// use as default the sonatype repository -> url, username and password
if (!project.hasProperty('mavenUsername')) {
	if (project.hasProperty('sonatypeUsername')){
		setCommonGradleDefaultPropertyIfNull("mavenUsername", sonatypeUsername)
	} else {
		setCommonGradleDefaultPropertyIfNull("mavenUsername", System.properties['user.name'])
	}
}

if (!project.hasProperty('publishingUsername')) {
	if (project.hasProperty('mavenUsername')){
		setCommonGradleDefaultPropertyIfNull("publishingUsername", mavenUsername)
	}
}

if (!project.hasProperty('mavenPassword')) {
	if (project.hasProperty('sonatypePassword')){
		setCommonGradleDefaultPropertyIfNull("mavenPassword", sonatypePassword, false)
	}
}


/***************************************************************************************
 * testing
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("initTesting", true)
if (initTesting) {
	setCommonGradleDefaultPropertyIfNull("testDependencyVersion", "5.3.1")

	if (testDependencyVersion!=null && !testDependencyVersion.isEmpty()) {
		if (testDependencyVersion.startsWith("4.")) {
			setCommonGradleDefaultPropertyIfNull("testImplementationDependency", "junit:junit:${testDependencyVersion}")
			setCommonGradleDefaultPropertyIfNull("testRuntimeOnlyDependency", "junit:junit:${testDependencyVersion}")
		} else {
			setCommonGradleDefaultPropertyIfNull("testImplementationDependency", "org.junit.jupiter:junit-jupiter-api:${testDependencyVersion}")
			setCommonGradleDefaultPropertyIfNull("testRuntimeOnlyDependency", "org.junit.jupiter:junit-jupiter-engine:${testDependencyVersion}")
		}
	}
}


/***************************************************************************************
 * code quality: checkstyle
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("checkstyleToolDefaultVersion", '8.27')
//setCommonGradleDefaultPropertyIfNull("checkstyleToolVersion", '8.27')
setCommonGradleDefaultPropertyIfNull("checkstyleMaxWarnings", 0)
setCommonGradleDefaultPropertyIfNull("checkstyleXMLReport", false)
setCommonGradleDefaultPropertyIfNull("checkstyleHTMLReport", true)
setCommonGradleDefaultPropertyIfNull("checkstyleConfigurationPath", "${configDirectory}/checkstyle")
setCommonGradleDefaultPropertyIfNull("checkstyleConfiguration", "${checkstyleConfigurationPath}/checkstyle.xml")
setCommonGradleDefaultPropertyIfNull("checkstyleDefaultConfigurationFileHeaderUrl", "https://raw.githubusercontent.com/toolarium/common-gradle-build/master/gradle/template/java/checkstyle-file-header.txt.template")
setCommonGradleDefaultPropertyIfNull("checkstyleDefaultConfigurationUrl", "https://raw.githubusercontent.com/toolarium/common-gradle-build/master/gradle/template/java/checkstyle.xml.template")
// 'https://raw.githubusercontent.com/checkstyle/checkstyle/master/src/main/resources/google_checks.xml' issues with current
//setCommonGradleDefaultPropertyIfNull("checkstyleCustomStylesheet", "${checkstyleConfigurationPath}/checkstyle.xml")


/***************************************************************************************
 * gradle jvm arguments
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("gradlePropertiesJvmArgs", "-Xmx1g -XX:MaxHeapSize=1g -XX:MaxPermSize=256m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=${fileEncoding}")
//setCommonGradleDefaultPropertyIfNull("gradlePropertiesLogLevel", "lifecycle")
setCommonGradleDefaultPropertyIfNull("gradlePropertiesLogLevel", "quiet")
setCommonGradleDefaultPropertyIfNull("gradlePropertiesConsole", "rich")
setCommonGradleDefaultPropertyIfNull("gradlePropertiesWarningMode", "all")
//gradle.startParameter.showStacktrace = org.gradle.api.logging.configuration.ShowStacktrace.ALWAYS


/***************************************************************************************
 * set project validation patterns
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("projectNameRegularExpressionPattern", '^[a-zA-Z0-9\\-]+$')
setCommonGradleDefaultPropertyIfNull("projectGroupIdRegularExpressionPattern", '^[a-zA-Z0-9\\.]+$')
setCommonGradleDefaultPropertyIfNull("projectComponentIdRegularExpressionPattern", '^[a-zA-Z0-9\\-]+$')
setCommonGradleDefaultPropertyIfNull("projectComponentIdIsPartOfProjectName", true)
setCommonGradleDefaultPropertyIfNull("projectComponentIdSeparator", "-")
setCommonGradleDefaultPropertyIfNull("projectRootPackageNamePrefix", "")
setCommonGradleDefaultPropertyIfNull("validateRootFiles", true)
setCommonGradleDefaultPropertyIfNull("validateRootDirectories", true)
setCommonGradleDefaultPropertyIfNull("validateProjectNameAndFolder", false)


/***************************************************************************************
 * allowedMainDirectories & allowedMainFiles
 ***************************************************************************************/
addCommonGradlePropertyList("allowedMainDirectories", buildDirectory)
addCommonGradlePropertyList("allowedMainDirectories", gradleDirectory)
addCommonGradlePropertyList("allowedMainDirectories", configDirectory)
addCommonGradlePropertyList("allowedMainDirectories", srcDirectory)
addCommonGradlePropertyList("allowedMainDirectories", docsDirectory)
addCommonGradlePropertyList("allowedMainDirectories", logsDirectory)
addCommonGradlePropertyList("allowedMainDirectories", tempDirectory)
addCommonGradlePropertyList("allowedMainFiles", licenseFile)
addCommonGradlePropertyList("allowedMainFiles", readmeFile)
addCommonGradlePropertyList("allowedMainFiles", versionFile)
addCommonGradlePropertyList("allowedMainFiles", buildGradleFile)
addCommonGradlePropertyList("allowedMainFiles", gradlePropertiesFile)
addCommonGradlePropertyList("allowedMainFiles", settingsGradleFile)
addCommonGradlePropertyList("allowedMainFiles", changelogFile)
addCommonGradlePropertyList("allowedMainFiles", editorConfigFile)
addCommonGradlePropertyList("allowedMainFiles", javaVersionConfigFile)

if (project.hasProperty('installGradleWrapper') && project.getProperty('installGradleWrapper')) {
	addCommonGradlePropertyList("allowedMainDirectories", "$rootDirectory/gradle")
	addCommonGradlePropertyList("allowedMainFiles", "$rootDirectory/gradlew")
	addCommonGradlePropertyList("allowedMainFiles", "$rootDirectory/gradlew.bat")
}


/***************************************************************************************
 * version default settings
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("majorVersionNumber", 0)
setCommonGradleDefaultPropertyIfNull("minorVersionNumber", 0)
setCommonGradleDefaultPropertyIfNull("revisionVersionNumber", 1)
setCommonGradleDefaultPropertyIfNull("qualifierVersionNumber", SNAPSHOT_TAG_NAME)
setCommonGradleDefaultPropertyIfNull("isReleaseVersion", false)
setCommonGradleDefaultPropertyIfNull("scmVersionNumber", '')


/***************************************************************************************
 * online connection url
 ***************************************************************************************/
setCommonGradleDefaultPropertyIfNull("onlineCheckConnectionUrl", 'www.google.com')
setCommonGradleDefaultPropertyIfNull("onlineCheckConnectionUrlTimeout", 1500)


/***************************************************************************************
 * valid build attributes
 ***************************************************************************************/
setCommonGradleProperty("validBuild", true)
setCommonGradleDefaultPropertyIfNull("validBuildMessage", "")
