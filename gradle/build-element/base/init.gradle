/*
 * init.gradle
 *
 * Copyright by toolarium, all rights reserved.
 * MIT License: https://mit-license.org
 */

apply from: "${commonGradleBuildElementPath}/base/initialisation.gradle"
apply from: "${commonGradleBuildElementPath}/base/version.gradle"
apply from: "${commonGradleBuildElementPath}/base/util.gradle"


/***************************************************************************************
 * Init
 ***************************************************************************************/
init {
	ext.hostname = getHostName()
	
	def headerLength = INDENT.length() + 11 + rootProject.name.length() + rootGroupId.length()
	def header = "${INDENT}Project ${STYLER['yellow'](rootProject.name)}"
	def length = MAX_LINELENGTH - headerLength - INDENT.length()
	if (length > 0 && project.hasProperty('rootDescription')) {
		header = header + " ($rootGroupId)"
		def printDescription = rootDescription
		if (printDescription.length() > length) 
			printDescription = printDescription.substring(0, length - 5) + "..."		
		
		header += ": " + printDescription
	}

	// TODO: why encoding don't corresponds to 
	def encoding = System.properties['file.encoding']
	encoding = ENCODING
	
	println("${STYLER['cyan'](LINE)}")	
	println("${header}")	
	println("${INDENT}Version ${STYLER['cyan'](project.version)}, ${STYLER['cyan'](DATETIMESTAMP)} (${System.properties['user.name']}, $encoding, ${System.properties['user.language']}, ${TimeZone.getDefault().getID()})")
	println("${INDENT}Java v${STYLER['cyan'](System.properties['java.version'])}, target ${STYLER['cyan'](targetCompatibility)} (${System.properties['java.vendor']}-${System.properties['java.vm.version']}), ${System.properties['os.name']} (${System.properties['os.arch']}) on ${hostname}")
	println("${INDENT}Java home: ${System.env['JAVA_HOME']}, PID: ${java.lang.ProcessHandle.current().pid()}") //, working path: ${System.properties['user.dir']}")
	//println("${INDENT}Memory: ${Runtime.getRuntime().maxMemory()}")
	println("${STYLER['cyan'](LINE)}")
}
