/*
 * gradle.gradle
 *
 * Copyright by toolarium, all rights reserved.
 * 
 * This file is part of the toolarium common-gradle-build.
 * 
 * The common-gradle-build is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * The common-gradle-build is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with Foobar. If not, see <http://www.gnu.org/licenses/>.
 */

 
/***************************************************************************************
 * Read gradle wrapper version
 ***************************************************************************************/
ext.readGradleWrapperVersion = { ->
	def versionFile = 'gradle/wrapper/gradle-wrapper.properties'

	if (new File(versionFile).exists()) {
		logInfo("Read gradle wrapper version file " + colorize(HIGHLITE_LEVEL, versionFile))
		def props = new Properties()
		file(versionFile).withInputStream { props.load(it) }
		String url = props.getProperty('distributionUrl').toString()
		
		if (url!=null) {
			String[] list = url.split('/');
			
			if (list!=null && list.length>0) {
				def filename = list[list.length-1];
				if (filename != null) {
					String[] filenameSplit = filename.split('-');
					if (filenameSplit!=null && filenameSplit.length>1) {
						return filenameSplit[1];
					} else {
						return filename;
					}
				}
			}
			
			return url;
		}
	}
	
	return gradle.gradleVersion;
}
 

/***************************************************************************************
 * Install gradle wrapper if not exists
 ***************************************************************************************/
ext.gradleWrapperinstalled = false
def hasWrapperFiles=(new File("gradle").exists() \
						&& new File("gradle/wrapper").exists() \
						&& new File("gradle/wrapper/gradle-wrapper.jar").exists() \
						&& new File("gradle/wrapper/gradle-wrapper.properties").exists() \
						&& new File("gradlew.").exists() \
						&& new File("gradlew.bat").exists())
def hasExpectedWrapperVersion="$gradleWrapperDefaultVersion".equals("$gradle.gradleVersion")

wrapper {
	onlyIf { installGradleWrapper && (!hasExpectedWrapperVersion || !hasWrapperFiles) }
	gradleVersion = "$gradleWrapperDefaultVersion"
			
	doLast {		
		if (!gradleWrapperinstalled) {
			gradleWrapperinstalled = true
			printInfo("> Installed gradle wrapper version " + colorize(readGradleWrapperVersion()))
		}
	}
}

// dependency on project validation
projectValidation.dependsOn wrapper
