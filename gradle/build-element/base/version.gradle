/*
 * version.gradle
 *
 * Copyright by toolarium, all rights reserved.
 * MIT License: https://mit-license.org
 */


/***************************************************************************************
 * Read version: see https://semver.org/ 
 ***************************************************************************************/
ext.readVersion = { ->

	// read version number
	logInfo("Read version file " + colorize(HIGHLITE_LEVEL, versionFile))

	def props = new Properties()	
	file(versionFile).withInputStream { props.load(it) }	
	
	def majorNumber = props.getProperty("major.number")
	if (majorNumber!=null) {
		setCommonGradleProperty('majorVersionNumber', parseInteger(majorNumber, 0, 'major.number'))
	}

	def minorNumber = props.getProperty("minor.number")
	if (minorNumber!=null) {
		setCommonGradleProperty('minorVersionNumber', parseInteger(minorNumber, 0, 'minor.number'))
	}
	
	def revisionNumber = props.getProperty("revision.number")
	if (revisionNumber!=null) {
		setCommonGradleProperty('revisionVersionNumber', parseInteger(revisionNumber, 1, 'revision.number'))
	}

	def buildNumber = props.getProperty("build.number")
	if (buildNumber!=null) {
		setCommonGradleProperty('buildVersionNumber', buildNumber.trim(), '')
	}

	project.version = project.getProperty('majorVersionNumber') + "." + project.getProperty('minorVersionNumber') + "." + project.getProperty('revisionVersionNumber')
	def buildVersionNumber = project.getProperty('buildVersionNumber')
	if (buildVersionNumber !=null && !buildVersionNumber.isEmpty()) {
		project.version = project.version + "-" +  buildVersionNumber
	}

	if (!project.getProperty('buildVersionNumber').endsWith(SNAPSHOT_TAG_NAME)) {
		setCommonGradleProperty('isReleaseVersion', true, true, false)
		logInfo("It is a release verison: " + colorize(HIGHLITE_LEVEL, project.version))
	} else {
		setCommonGradleProperty('isReleaseVersion', false, false, false)
		logInfo("It is a snapshot verison: " + colorize(HIGHLITE_LEVEL, project.version))
	}
	
	setCommonGradleProperty('isSnapshotVersion', !project.getProperty('isReleaseVersion'))
	setCommonGradleProperty('scmVersionNumber', '')
}


/***************************************************************************************
 * Update version
 ***************************************************************************************/
ext.updateVersion = { ->
	logInfo("Write file " + versionFile + " -> " + project.getProperty('majorVersionNumber') + ", " + project.getProperty('minorVersionNumber') + ", " + project.getProperty('revisionVersionNumber') + ", " + project.getProperty('buildVersionNumber'))
	new File('.', versionFile).withWriter { w ->
		w << "major.number        = " << project.getProperty('majorVersionNumber') << NELINE \
		<< "minor.number        = " << project.getProperty('minorVersionNumber') << NELINE \
		<< "revision.number     = " << project.getProperty('revisionVersionNumber') << NELINE \
		<< "build.number        = " << project.getProperty('buildVersionNumber') << NELINE 
	}
}


/***************************************************************************************
 * Increase build version
 ***************************************************************************************/
ext.increaseRevisionVersion = { ->
	setCommonGradleProperty('revisionVersionNumber', 1 + project.getProperty('revisionVersionNumber'), 1)
	logInfo("Increase revision number " + revisionVersionNumber + ": " + project.version)
	updateVersion()
	readVersion()
}
