/*
 * version.gradle
 *
 * Copyright by toolarium, all rights reserved.
 * MIT License: https://mit-license.org
 */

apply from: "${commonGradleBuildElementPath}/base/constants.gradle"
apply from: "${commonGradleBuildElementPath}/base/path.gradle"


/***************************************************************************************
 * Read version: see https://semver.org/ 
 ***************************************************************************************/
task readVersion { 	
	group = 'Verification'
	description = 'Read the version'

	// read version number
	logger.info "Read version file " + versionFile
		
	def props = new Properties()	
	file(versionFile).withInputStream { props.load(it) }	
	
	def majorNumber = props.getProperty("major.number")
	if (majorNumber!=null)
		project.ext.majorVersionNumber = majorNumber.trim()
	else
		project.ext.majorVersionNumber = 0

	def minorNumber = props.getProperty("minor.number")
	if (minorNumber!=null)
		project.ext.minorVersionNumber = minorNumber.trim()
	else
		project.ext.minorVersionNumber = 0
		
	def revisionNumber = props.getProperty("revision.number")
	if (revisionNumber!=null)
		project.ext.revisionVersionNumber = revisionNumber.trim()
	else
		project.ext.revisionVersionNumber = 1

	def buildNumber = props.getProperty("build.number")
	if (buildNumber!=null)
		project.ext.buildVersionNumber = buildNumber.trim()
	else
		project.ext.buildVersionNumber = ''
		
	project.version = project.ext.majorVersionNumber + "." + project.ext.minorVersionNumber + "." + project.ext.revisionVersionNumber
	if (project.ext.buildVersionNumber !=null && !project.ext.buildVersionNumber.isEmpty()) {
		project.version = project.version + "-" +  project.ext.buildVersionNumber
	}
	
	if (project.ext.buildVersionNumber.indexOf(SNAPSHOT_TAG_NAME)<0) {
		project.ext.isReleaseVersion = true
		logger.info "It is a release verison: " + project.version
	} else {
		project.ext.isReleaseVersion = false
		logger.info "It is a snapshot verison: " + project.version
	}
	project.ext.isSnapshotVersion = !project.ext.isReleaseVersion
}


/***************************************************************************************
 * Update version
 ***************************************************************************************/
task updateVersion { 
	group = 'Verification'
	description = 'Update the version'

	doLast {
		logger.info "Write file " + versionFile + " -> " + majorVersionNumber
		new File('.', versionFile).withWriter { w ->
			w << "major.number        = ${project.ext.majorVersionNumber}" << NELINE \
			<< "minor.number        = ${project.ext.minorVersionNumber}" << NELINE \
			<< "revision.number     = ${project.ext.revisionVersionNumber}" << NELINE \
			<< "build.number        = ${project.ext.buildVersionNumber}" << NELINE 
		}
	}
}


/***************************************************************************************
 * Increase build version
 ***************************************************************************************/
task increaseBuildVersion { 
	group = 'Verification'
	description = 'Increase the build version'

	doLast {
		project.ext.revisionVersionNumber = project.ext.revisionVersionNumber + 1
		readVersion.execute()
	}
}
