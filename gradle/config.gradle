/*
 * config.gradle
 *
 * Copyright by toolarium, all rights reserved.
 * 
 * This file is part of the toolarium common-gradle-build.
 * 
 * The common-gradle-build is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * The common-gradle-build is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with Foobar. If not, see <http://www.gnu.org/licenses/>.
 */


if (!project.hasProperty('commonGradleBuildUrl')) {
    ext.commonGradleBuildUrl='https://raw.githubusercontent.com/toolarium/common-gradle-build/master/gradle'
}

if (!project.hasProperty('commonGradleBuildElementPath')) {
	ext.commonGradleBuildElementPath="${commonGradleBuildUrl}/build-element"
}


/***************************************************************************************
 * Set additional template path
 ***************************************************************************************/
ext.projectTypeTemplatePath='config'

if (!project.hasProperty('configPackageArchiveClassifier')) {
	ext.configPackageArchiveClassifier = ''
}


/***************************************************************************************
 * Dependencies
 ***************************************************************************************/
apply from: "${commonGradleBuildElementPath}/base.gradle"
apply from: "${commonGradleBuildElementPath}/base/gradle.gradle"
apply from: "${commonGradleBuildElementPath}/config/publication.gradle"
apply from: "${commonGradleBuildElementPath}/java/signing.gradle"
apply plugin: 'distribution'


/***************************************************************************************
 * default tasks
 ***************************************************************************************/
defaultTasks 'clean', 'configJar'


/***************************************************************************************
 * Avoid code compile and generation
 ***************************************************************************************/
ext.compileTimestamp = BUILD_TIMESTAMP


/***************************************************************************************
 * project config validation
 ***************************************************************************************/
projectValidation {
	doLast {
		if (project.getProperty('IS_NEW')) {
			def configDirectory = project.getProperty('configDirectory')
			if (!new File(configDirectory).exists()) {
				new File(configDirectory).mkdirs()
				printInfo("> Create directory " + colorize(HIGHLITE_LEVEL, configDirectory) + ".")
			}
			
			registerEndMessage("" << NELINE \
								<< "  Define in the " + colorize(HIGHLITE_LEVEL, "$rootDirectory/gradle.properties") + " the sub configuration packages:" << NELINE \
								<< "      " + colorize(HIGHLITE_LEVEL, "configPackages = sample1, sample2") + "" << NELINE \
								<< "" << NELINE \
								<< "  To get started, got to " + project.projectDir.toString() + ":" << NELINE \
								<< "      " + colorize(HIGHLITE_LEVEL, startExecutable) + "" << NELINE)
		}
	}
}


/***************************************************************************************
 * configuration distribution
 ***************************************************************************************/
distributions {
    configJar {
        distributionBaseName = 'someName'
        contents {
            from 'config'
        }
    }
}

